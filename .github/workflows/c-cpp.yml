name: Build and Test Media Player

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * *"

env:
  BUILD_TYPE: Release
  WXWIDGETS_VERSION: 3.2.6
  CMAKE_VERSION: 3.31.2

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            wxwidgets-prefix: /usr/local
          - os: windows-latest
            wxwidgets-prefix: C:/wxWidgets
          - os: macos-latest
            wxwidgets-prefix: /usr/local

    steps:
      - uses: actions/checkout@v4

      - name: Install CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ${{ env.CMAKE_VERSION }}

      - name: Install Modern C++ Compiler
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-13
          echo "CC=gcc-13" >> $GITHUB_ENV
          echo "CXX=g++-13" >> $GITHUB_ENV

      - name: Cache apt packages
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-cache-${{ hashFiles('**/c-cpp.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-cache-

      - name: Install Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y \
            build-essential \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            libgstreamer-plugins-bad1.0-dev

      - name: Cache wxWidgets (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        id: cache-wxwidgets
        uses: actions/cache@v4
        with:
          path: ${{ matrix.wxwidgets-prefix }}
          key: ${{ runner.os }}-wxwidgets-${{ env.WXWIDGETS_VERSION }}

      - name: Install wxWidgets (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && steps.cache-wxwidgets.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/wxWidgets/wxWidgets/releases/download/v${{ env.WXWIDGETS_VERSION }}/wxWidgets-${{ env.WXWIDGETS_VERSION }}.tar.bz2
          tar xf wxWidgets-${{ env.WXWIDGETS_VERSION }}.tar.bz2
          cd wxWidgets-${{ env.WXWIDGETS_VERSION }}
          mkdir build-gtk
          cd build-gtk
          ../configure --prefix=${{ matrix.wxwidgets-prefix }} --with-gtk=3
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Install wxWidgets (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          git clone --recursive https://github.com/wxWidgets/wxWidgets.git -b v${{ env.WXWIDGETS_VERSION }}
          cd wxWidgets
          mkdir build-windows
          cd build-windows
          cmake .. -G "Visual Studio 17 2022" -A x64 -DwxBUILD_SHARED=ON -DCMAKE_INSTALL_PREFIX=${{ matrix.wxwidgets-prefix }}
          cmake --build . --config Release --target install

      - name: Install wxWidgets (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install wxwidgets

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

      - name: Package
        run: |
          cmake --build ${{github.workspace}}/build --target package --config ${{env.BUILD_TYPE}}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: media-player-${{ matrix.os }}
          path: |
            ${{github.workspace}}/build/*.deb
            ${{github.workspace}}/build/*.dmg
            ${{github.workspace}}/build/*.exe
            ${{github.workspace}}/build/*.zip
          if-no-files-found: ignore
